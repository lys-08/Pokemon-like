<diagram program="umletino" version="15.1"><zoom_level>10</zoom_level><element><id>UMLClass</id><coordinates><x>220</x><y>240</y><w>270</w><h>230</h></coordinates><panel_attributes>Pokemon 
--
# PokemonSO data
# float damageCoef
# float defenseCoef
--
+ float GetHp()
+ float GetDamage()
+ float GetDefense()
+ float GetSpeed()
+ Type GetType()
+ void TakeDamage(float damage, Type type)
+ void TakeDistraction()
+ void TakeFocus()
+ bool IsKO()
+ void ResetCoeffs()</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>70</x><y>70</y><w>100</w><h>80</h></coordinates><panel_attributes>EnumType : Type
--
Ruby
Sapphire
Emerald</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>610</x><y>0</y><w>260</w><h>210</h></coordinates><panel_attributes>Fight Manager (Design Pattern ???)
--
- WildPokemon enemy_
- Pokemon playerPokemon_
- bool playerTurn_
--
- SetFirst()
- EnemyTurn()
+ Capture(Pokeball p) (si capturé hp max)
+ Heal(Potion p)
+ Attack(Pokemon p1, Pokemon p2)
+ Focus(Pokemon p)
+ Distract(Pokemon p1, Pokemon p2)
+ Run()
+ EndFight()</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>590</x><y>270</y><w>260</w><h>120</h></coordinates><panel_attributes>Player
--
- float speed_
- List&lt;Pokemon&gt; pokemons_
- int posMainPokemon_
--
+ Pokemon GetMainPokemon()
+ void SetMainPokemon(int posPokemon)</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>900</x><y>0</y><w>210</w><h>100</h></coordinates><panel_attributes>Game Manager
--
- 
--
+  </panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>220</x><y>510</y><w>270</w><h>190</h></coordinates><panel_attributes>Wild Pokemon
--
- float attackCoeff_
- float distractCoeff_
- float focusCoeff_
- Dictionnary&lt;int, GameObject&gt; objs_ (ordonné)
--
+ GameObject GetObj()
+ void AttackingCoeff()
+ void DistractCoeff()
+ void DefenseCoeff()
- void LaunchFight()
- void GenerateCoeffs()</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>340</x><y>460</y><w>70</w><h>70</h></coordinates><panel_attributes>lt=&lt;&lt;-
&lt;&lt;hérite&gt;&gt;</panel_attributes><additional_attributes>10;10;10;50</additional_attributes></element><element><id>UMLClass</id><coordinates><x>560</x><y>570</y><w>250</w><h>210</h></coordinates><panel_attributes>Data (truc avec un JSON)
--
class Pokeball {
string name_;
- float captureCoeff_;
}

class Potion {
string name_;
- float hp_;
}

+ Potion LoadFromJson()
+ Pokeball LoadFromJson()</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>220</x><y>60</y><w>270</w><h>120</h></coordinates><panel_attributes>Pokemon SO : Scriptable Object
--
+ string name
+ float hp
+ float damage
+ float defense
+ float speed
+ Type type</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>160</x><y>90</y><w>80</w><h>30</h></coordinates><panel_attributes>lt=&lt;&lt;.</panel_attributes><additional_attributes>60;10;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>340</x><y>170</y><w>100</w><h>90</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;-
&lt;&lt;instanceOf&gt;&gt;</panel_attributes><additional_attributes>10;70;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>480</x><y>290</y><w>130</w><h>40</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;-
&lt;&lt;instanceOf&gt;&gt;</panel_attributes><additional_attributes>110;20;10;20</additional_attributes></element></diagram>